#This is how I modifed the Spatafora et al. 2016 pipeline, which can be found here: https://github.com/zygolife/Phylogenomics/tree/master/Spatafora_et_al_2016

#The directory structure I work in:
phylogenomics
  aln
  HMM3
  jobs
  messy_pep
    genbank
    jgi
    Maker
  pep
  raxml_gene_trees
  raxml_gene_tree_scripts
  scripts
    combinefasaln.pl (from Spatafora et al. 2016)
    construct_unaln_files.pl (from Sparafora et al. 2016)
    get_best_hmmtbl.pl (from Spatafora et al. 2016)    
  search
  sh_scripts
  Tree


#First, you need to clean up the sequence names in all of your amino acid fasta files. The sequence names should follow the format of >Organism_name|locus.
#This will require different manipulations depending on where your data came from.
#Second, this pipeline requires that all of the fasta files have the same wrap length. The easiest way to ensure this is to place the sequence on a single line.
#I recommend doing this within the "messy_pep" directory with the raw files in the appropriate sub-directories (i.e., files from Genbank in the "genbank" directory).

#For Maker files:
  #To clean up the sequence names from the horribleness that is Maker:
cat [protein_fasta] | awk '{print $1}' > [organism_name]_renamed_seqs.aa.fasta

  #To make it single line:
cat [organism_fasta]_renamed_seqs.aa.fasta | awk '/^>/ {printf("\n%s\n",$0);next; } { printf("%s",$0);} END {printf("\n");}' > [organism_name]_single_line.aa.fasta

  #To put it in [organism_name]|[locus] format:
cat [organism_name]_single_line.aa.fasta | sed 's/_/|/g' > [organism_name]_final_names.aa.fasta

#For Genbank fastas (example scripts can be found in the "processing_genbank_files" folder https://github.com/Michigan-Mycology/Lab-Code-and-Hacks/tree/master/phylogenomics/processing_genbank_files):
  #To get just the acession numbers (which will serve as the "locus" name).
  #This can be run as a for loop in a shell script.
cat  [genbank_name].fa | awk '{print $1}' | sed 's/\.1/g' > [genbank_name]_renamed1.aa.fasta

  #To put the sequence names in [organism_name]|[locus_name] format:
  #I had to do this for each file individually. If you are clever, I am sure there is a way to write it into a script.
cat [genbank_name]_renamed1.aa.fasta | sed 's/>/>sp_name\|/g' > sp_name_penultimate_names.aa.fasta

  #To make it all single line, which can be done as a script.
 cat sp_name_penultimate_names.aa.fasta | awk '/^>/ {printf("\n%s\n",$0);next; } { printf("%s",$0);} END {printf("\n");}' > [organism_name]_final_names.aa.fasta

#For JGI files

[under construction]

#Now, move all of the *final_names.aa.fasta files into the "pep" directory.

#You will need to populate the HMM3 folder with the *.hmm files containing the markers you wish to use. 
#I used the markers from Spatafora et al. 2016, which can be found here https://github.com/zygolife/Phylogenomics/tree/master/Spatafora_et_al_2016/HMM/Roz200
#There are other markers available for fungi here:
#Make sure the "markers_3.hmmb" file is in the "phylogenomics" directory.
#You will need to load the following modules (current versions are preferable).

module load hmmer

module load bioperl

#The next step is to perform a hmmer search for all of the markers in your genomes of interest.
#Hmmer uses hidden Markov models to find the markers in your genomes of interest. The page can be found here: http://hmmer.org/
#I re-wrote the Spatafora et al. script for this, and it is placed in this folder.

sh hmmsearch_loop.sh

#This should produce non-zero .dombtl & .log files for each of your genomes.
#We only want the best hit, i.e., the best match to the hmmer model, for each genome. We can get that by calling the "get_best_hmmtbl.pl" script written for the Spatafora et al. paper. This script should be placed in your "scripts" directory.
#I have included my script for doing so in this folder.

sh make_get_best_hits.sh

#This should produce non-zero .best files for each of your genomes.
#Move (or copy) the .best files into the "search" directory.
#Currently, we have a list of each marker for each genome, but we want a fasta file of each marker.
#To do this, we need the "construct_unaln_files.pl" from the Spatafora et al. github. Place it in your "scripts" directory.
#My script for calling the "construct_unaln_files.pl" script is in this folder.

sh make_unaln.sh

#This should populate the "aln" directory with non-zero fasta files--one for each marker.














